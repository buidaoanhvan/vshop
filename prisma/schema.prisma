generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model codex {
  id         Int       @id @default(autoincrement())
  voucher_id Int?
  codex      String?   @db.VarChar(255)
  is_used    Int?
  phone      String?   @db.VarChar(255)
  status     Int?
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  vouchers   vouchers? @relation(fields: [voucher_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "codex_ibfk_1")

  @@index([voucher_id], map: "voucher_id")
}

model roles {
  id         Int     @id @default(autoincrement())
  name       String? @db.VarChar(255)
  guard_name String? @db.VarChar(255)
  users      users[]
}

model shops {
  id         Int        @id @default(autoincrement())
  name       String?    @db.VarChar(255)
  logo       String?    @db.VarChar(255)
  address    String?    @db.VarChar(255)
  status     Int?
  created_at DateTime?  @default(now())
  updated_at DateTime?  @updatedAt
  users      users[]
  vouchers   vouchers[]
}

model users {
  id         Int       @id @default(autoincrement())
  email      String?   @db.VarChar(255)
  password   String?   @db.VarChar(255)
  fullname   String?   @db.VarChar(255)
  phone      String?   @db.VarChar(255)
  status     Int?
  role_id    Int?
  shop_id    Int?
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  roles      roles?    @relation(fields: [role_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "users_ibfk_1")
  shops      shops?    @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "users_ibfk_2")

  @@index([role_id], map: "role_id")
  @@index([shop_id], map: "shop_id")
}

model vouchers {
  id             Int       @id @default(autoincrement())
  shop_id        Int?
  title          String?   @db.VarChar(255)
  description    String?   @db.Text
  image          String?   @db.VarChar(255)
  status         Int?
  discount_value Int?
  discount_type  Int?
  max_discount   Int?
  start_time     DateTime? @db.DateTime(0)
  end_time       DateTime? @db.DateTime(0)
  created_at     DateTime? @default(now())
  updated_at     DateTime? @updatedAt
  codex          codex[]
  shops          shops?    @relation(fields: [shop_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "vouchers_ibfk_1")

  @@index([shop_id], map: "shop_id")
}
